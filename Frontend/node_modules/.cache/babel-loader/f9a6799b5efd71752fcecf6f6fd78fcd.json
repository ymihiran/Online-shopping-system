{"ast":null,"code":"\"use strict\";\n\nvar querystring = require(\"querystring\");\n\nexports.createPathWithQuery = function (path, query) {\n  if (!query) {\n    throw new Error('\"query\" is a required parameter');\n  }\n\n  var pathExt = \"\";\n\n  if (typeof query === \"string\") {\n    // single call Id\n    pathExt = \"/\".concat(query);\n  } else if (typeof query === \"object\" && Object.keys(query).length > 0) {\n    // filter\n    pathExt = \"?\".concat(querystring.stringify(query));\n  }\n\n  return \"\".concat(path).concat(pathExt);\n};\n\nexports.sendError = function (callback, err, returnData) {\n  // Throw the error in case if there is no callback passed\n  if (callback) {\n    callback(err, returnData);\n  } else {\n    throw err;\n  }\n};\n\nexports.clone = function (a) {\n  return JSON.parse(JSON.stringify(a));\n};","map":{"version":3,"sources":["../src/Utils.js"],"names":["querystring","require","exports","pathExt","Object","callback","JSON"],"mappings":";;AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAzB,aAAyB,CAAzB;;AAEAC,OAAO,CAAPA,mBAAAA,GAA8B,UAAA,IAAA,EAAA,KAAA,EAAuB;AACnD,MAAI,CAAJ,KAAA,EAAY;AACV,UAAM,IAAA,KAAA,CAAN,iCAAM,CAAN;AACD;;AAED,MAAIC,OAAO,GAAX,EAAA;;AACA,MAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7B;AACAA,IAAAA,OAAO,GAAA,IAAA,MAAA,CAAPA,KAAO,CAAPA;AAFF,GAAA,MAGO,IAAI,OAAA,KAAA,KAAA,QAAA,IAA6BC,MAAM,CAANA,IAAAA,CAAAA,KAAAA,EAAAA,MAAAA,GAAjC,CAAA,EAAgE;AACrE;AACAD,IAAAA,OAAO,GAAA,IAAA,MAAA,CAAOH,WAAW,CAAXA,SAAAA,CAAdG,KAAcH,CAAP,CAAPG;AACD;;AAED,SAAA,GAAA,MAAA,CAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA;AAdFD,CAAAA;;AAiBAA,OAAO,CAAPA,SAAAA,GAAoB,UAAA,QAAA,EAAA,GAAA,EAAA,UAAA,EAAqC;AACvD;AACA,MAAA,QAAA,EAAc;AACZG,IAAAA,QAAQ,CAAA,GAAA,EAARA,UAAQ,CAARA;AADF,GAAA,MAEO;AACL,UAAA,GAAA;AACD;AANHH,CAAAA;;AASAA,OAAO,CAAPA,KAAAA,GAAgB,UAAA,CAAA,EAAa;AAC3B,SAAOI,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,SAAAA,CAAlB,CAAkBA,CAAXA,CAAP;AADFJ,CAAAA","sourcesContent":["var querystring = require(\"querystring\");\n\nexports.createPathWithQuery = function (path, query) {\n  if (!query) {\n    throw new Error('\"query\" is a required parameter');\n  }\n\n  var pathExt = \"\";\n  if (typeof query === \"string\") {\n    // single call Id\n    pathExt = `/${query}`;\n  } else if (typeof query === \"object\" && Object.keys(query).length > 0) {\n    // filter\n    pathExt = `?${querystring.stringify(query)}`;\n  }\n\n  return `${path}${pathExt}`;\n};\n\nexports.sendError = function (callback, err, returnData) {\n  // Throw the error in case if there is no callback passed\n  if (callback) {\n    callback(err, returnData);\n  } else {\n    throw err;\n  }\n};\n\nexports.clone = function (a) {\n  return JSON.parse(JSON.stringify(a));\n};\n"]},"metadata":{},"sourceType":"script"}