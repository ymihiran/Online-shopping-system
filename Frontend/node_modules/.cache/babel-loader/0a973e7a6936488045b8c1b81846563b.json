{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _querystring = _interopRequireDefault(require(\"querystring\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass Redact {\n  static get PATH() {\n    return \"/v1/redact\";\n  }\n\n  constructor(credentials, options) {\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  transaction(id, product, opts, callback) {\n    if (typeof callback === \"undefined\" && typeof opts === \"function\") {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    return this.options.api.postJson(\"\".concat(Redact.PATH, \"/transaction\"), _objectSpread({\n      id,\n      product\n    }, opts), function (err, response, body) {\n      if (err) {\n        return callback(err);\n      }\n\n      return callback(null, body);\n    });\n  }\n\n}\n\nvar _default = Redact;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["../src/Redact.js"],"names":["PATH","constructor","transaction","callback","opts","Redact","product"],"mappings":"AAAA;;;;;;;AAEA,IAAA,GAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAA,MAAA,CAAa;AACI,aAAJA,IAAI,GAAG;AAChB,WAAA,YAAA;AACD;;AAEDC,EAAAA,WAAW,CAAA,WAAA,EAAA,OAAA,EAAuB;AAChC,SAAA,KAAA,GAAA,WAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACD;;AAEDC,EAAAA,WAAW,CAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAA8B;AACvC,QAAI,OAAA,QAAA,KAAA,WAAA,IAAmC,OAAA,IAAA,KAAvC,UAAA,EAAmE;AACjEC,MAAAA,QAAQ,GAARA,IAAAA;AACAC,MAAAA,IAAI,GAAJA,EAAAA;AACD;;AAEDA,IAAAA,IAAI,GAAGA,IAAI,IAAXA,EAAAA;AAEA,WAAO,KAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,GAAA,MAAA,CACFC,MAAM,CADJ,IAAA,EAAA,cAAA,CAAA,EAAA,aAAA,CAAA;AAAA,MAAA,EAAA;AAECC,MAAAA;AAFD,KAAA,EAAA,IAAA,CAAA,EAGL,UAAA,GAAA,EAAA,QAAA,EAAA,IAAA,EAA+B;AAC7B,UAAA,GAAA,EAAS;AACP,eAAOH,QAAQ,CAAf,GAAe,CAAf;AACD;;AAED,aAAOA,QAAQ,CAAA,IAAA,EAAf,IAAe,CAAf;AARJ,KAAO,CAAP;AAWD;;AA7BU;;eAgCEE,M","sourcesContent":["\"use strict\";\n\nimport fs from \"fs\";\nimport querystring from \"querystring\";\n\nclass Redact {\n  static get PATH() {\n    return \"/v1/redact\";\n  }\n\n  constructor(credentials, options) {\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  transaction(id, product, opts, callback) {\n    if (typeof callback === \"undefined\" && typeof opts === \"function\") {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    return this.options.api.postJson(\n      `${Redact.PATH}/transaction`,\n      { id, product, ...opts },\n      function (err, response, body) {\n        if (err) {\n          return callback(err);\n        }\n\n        return callback(null, body);\n      }\n    );\n  }\n}\n\nexport default Redact;\n"]},"metadata":{},"sourceType":"script"}