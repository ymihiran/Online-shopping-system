{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar fs = require(\"fs\");\n\nclass FilesResource {\n  /**\n   * The path to the `calls` resource.\n   */\n  static get PATH() {\n    return \"/v1/files\";\n  }\n  /**\n   * Creates a new FilesResource.\n   *\n   * @param {Credentials} creds - Credentials used when interacting with the Vonage API.\n   * @param {Object} options - additional options for the class.\n   */\n\n\n  constructor(creds, options) {\n    this.creds = creds;\n    this.options = options;\n  }\n  /**\n   * Get stream for a remote File\n   *\n   * @param {string} [fileIdOrUrl] - The unique identifier or URL for the file\n   * @param {function} callback - function to be called when the request completes.\n   */\n\n\n  get(fileIdOrUrl, callback) {\n    if (!fileIdOrUrl) {\n      throw new Error('\"fileIdOrUrl\" is a required parameter');\n    }\n\n    fileIdOrUrl = fileIdOrUrl.split(\"/\").pop(-1);\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: \"\".concat(FilesResource.PATH, \"/\").concat(fileIdOrUrl),\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Authorization: \"Bearer \".concat(this.creds.generateJwt())\n      }\n    };\n    this.options.httpClient.request(config, callback);\n  }\n  /**\n   * Save remote File locally\n   *\n   * @param {string} [fileIdOrUrl] - The unique identifier or URL for the file\n   * @param {string} [file] - Filename or file descriptor\n   * @param {function} callback - function to be called when the request completes.\n   */\n\n\n  save(fileIdOrUrl, file, callback) {\n    this.get(fileIdOrUrl, (error, data) => {\n      if (error) {\n        callback(error, null);\n      } else {\n        this.__storeFile(data, file, callback);\n      }\n    });\n  }\n\n  __storeFile(data, file, callback) {\n    fs.writeFile(file, data, error => {\n      if (error) {\n        callback(error, null);\n      } else {\n        callback(null, file);\n      }\n    });\n  }\n\n}\n\nvar _default = FilesResource;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["../src/FilesResource.js"],"names":["fs","require","PATH","constructor","get","fileIdOrUrl","config","host","path","FilesResource","method","headers","Authorization","save","callback","__storeFile","error"],"mappings":"AAAA;;;;;;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAhB,IAAgB,CAAhB;;AAEA,MAAA,aAAA,CAAoB;AAClB;AACF;AACA;AACiB,aAAJC,IAAI,GAAG;AAChB,WAAA,WAAA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,WAAW,CAAA,KAAA,EAAA,OAAA,EAAiB;AAC1B,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,GAAG,CAAA,WAAA,EAAA,QAAA,EAAwB;AACzB,QAAI,CAAJ,WAAA,EAAkB;AAChB,YAAM,IAAA,KAAA,CAAN,uCAAM,CAAN;AACD;;AAEDC,IAAAA,WAAW,GAAGA,WAAW,CAAXA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,CAA2B,CAAzCA,CAAcA,CAAdA;AAEA,QAAIC,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,KAAA,OAAA,CAAA,OAAA,IADK,eAAA;AAEXC,MAAAA,IAAI,EAAA,GAAA,MAAA,CAAKC,aAAa,CAAlB,IAAA,EAAA,GAAA,EAAA,MAAA,CAFO,WAEP,CAFO;AAGXC,MAAAA,MAAM,EAHK,KAAA;AAIXC,MAAAA,OAAO,EAAE;AACP,wBADO,0BAAA;AAEPC,QAAAA,aAAa,EAAA,UAAA,MAAA,CAAY,KAAA,KAAA,CAAZ,WAAY,EAAZ;AAFN;AAJE,KAAb;AAUA,SAAA,OAAA,CAAA,UAAA,CAAA,OAAA,CAAA,MAAA,EAAA,QAAA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,IAAI,CAAA,WAAA,EAAA,IAAA,EAAA,QAAA,EAA8B;AAChC,SAAA,GAAA,CAAA,WAAA,EAAsB,CAAA,KAAA,EAAA,IAAA,KAAiB;AACrC,UAAA,KAAA,EAAW;AACTC,QAAAA,QAAQ,CAAA,KAAA,EAARA,IAAQ,CAARA;AADF,OAAA,MAEO;AACL,aAAA,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA;AACD;AALH,KAAA;AAOD;;AAEDC,EAAAA,WAAW,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,EAAuB;AAChCf,IAAAA,EAAE,CAAFA,SAAAA,CAAAA,IAAAA,EAAAA,IAAAA,EAA0BgB,KAAD,IAAW;AAClC,UAAA,KAAA,EAAW;AACTF,QAAAA,QAAQ,CAAA,KAAA,EAARA,IAAQ,CAARA;AADF,OAAA,MAEO;AACLA,QAAAA,QAAQ,CAAA,IAAA,EAARA,IAAQ,CAARA;AACD;AALHd,KAAAA;AAOD;;AAtEiB;;eAyELS,a","sourcesContent":["\"use strict\";\n\nvar fs = require(\"fs\");\n\nclass FilesResource {\n  /**\n   * The path to the `calls` resource.\n   */\n  static get PATH() {\n    return \"/v1/files\";\n  }\n\n  /**\n   * Creates a new FilesResource.\n   *\n   * @param {Credentials} creds - Credentials used when interacting with the Vonage API.\n   * @param {Object} options - additional options for the class.\n   */\n  constructor(creds, options) {\n    this.creds = creds;\n    this.options = options;\n  }\n\n  /**\n   * Get stream for a remote File\n   *\n   * @param {string} [fileIdOrUrl] - The unique identifier or URL for the file\n   * @param {function} callback - function to be called when the request completes.\n   */\n  get(fileIdOrUrl, callback) {\n    if (!fileIdOrUrl) {\n      throw new Error('\"fileIdOrUrl\" is a required parameter');\n    }\n\n    fileIdOrUrl = fileIdOrUrl.split(\"/\").pop(-1);\n\n    var config = {\n      host: this.options.apiHost || \"api.nexmo.com\",\n      path: `${FilesResource.PATH}/${fileIdOrUrl}`,\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n        Authorization: `Bearer ${this.creds.generateJwt()}`,\n      },\n    };\n\n    this.options.httpClient.request(config, callback);\n  }\n\n  /**\n   * Save remote File locally\n   *\n   * @param {string} [fileIdOrUrl] - The unique identifier or URL for the file\n   * @param {string} [file] - Filename or file descriptor\n   * @param {function} callback - function to be called when the request completes.\n   */\n  save(fileIdOrUrl, file, callback) {\n    this.get(fileIdOrUrl, (error, data) => {\n      if (error) {\n        callback(error, null);\n      } else {\n        this.__storeFile(data, file, callback);\n      }\n    });\n  }\n\n  __storeFile(data, file, callback) {\n    fs.writeFile(file, data, (error) => {\n      if (error) {\n        callback(error, null);\n      } else {\n        callback(null, file);\n      }\n    });\n  }\n}\n\nexport default FilesResource;\n"]},"metadata":{},"sourceType":"script"}