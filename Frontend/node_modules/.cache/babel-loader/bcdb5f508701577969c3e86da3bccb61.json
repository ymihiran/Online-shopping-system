{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _NullLogger = _interopRequireDefault(require(\"./NullLogger\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass ConsoleLogger extends _NullLogger.default {\n  constructor(consoleOverride) {\n    super();\n    this.out = consoleOverride || console;\n  }\n\n  log(level) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.out.log(\"\".concat(level, \":\"), ...args);\n  }\n\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this.log(\"warn\", ...args);\n  }\n\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this.out.error(\"error:\", ...args);\n  }\n\n}\n\nvar _default = ConsoleLogger;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["../src/ConsoleLogger.js"],"names":["NullLogger","constructor","consoleOverride","log","args","warn","error","ConsoleLogger"],"mappings":";;;;;;;AAAA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;;;;;;;AAEA,MAAA,aAAA,SAA4BA,WAAAA,CAA5B,OAAA,CAAuC;AACrCC,EAAAA,WAAW,CAAA,eAAA,EAAkB;AAC3B;AAEA,SAAA,GAAA,GAAWC,eAAe,IAA1B,OAAA;AACD;;AAEDC,EAAAA,GAAG,CAAA,KAAA,EAAiB;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,IAAA,GAAA,CAAA,CAANA,GAAM,SAAA,CAAA,IAAA,CAANA;AAAM;;AAClB,SAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,KAAA,EAAA,GAAA,CAAA,EAA0B,GAA1B,IAAA;AACD;;AAEDC,EAAAA,IAAI,GAAU;AAAA,SAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAND,IAAM,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,KAAA,CAANA,GAAM,SAAA,CAAA,KAAA,CAANA;AAAM;;AACZ,SAAA,GAAA,CAAA,MAAA,EAAiB,GAAjB,IAAA;AACD;;AAEDE,EAAAA,KAAK,GAAU;AAAA,SAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAANF,IAAM,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAANA,MAAAA,IAAM,CAAA,KAAA,CAANA,GAAM,SAAA,CAAA,KAAA,CAANA;AAAM;;AACb,SAAA,GAAA,CAAA,KAAA,CAAA,QAAA,EAAyB,GAAzB,IAAA;AACD;;AAjBoC;;eAoBxBG,a","sourcesContent":["import NullLogger from \"./NullLogger\";\n\nclass ConsoleLogger extends NullLogger {\n  constructor(consoleOverride) {\n    super();\n\n    this.out = consoleOverride || console;\n  }\n\n  log(level, ...args) {\n    this.out.log(`${level}:`, ...args);\n  }\n\n  warn(...args) {\n    this.log(\"warn\", ...args);\n  }\n\n  error(...args) {\n    this.out.error(\"error:\", ...args);\n  }\n}\n\nexport default ConsoleLogger;\n"]},"metadata":{},"sourceType":"script"}