{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Utils = _interopRequireDefault(require(\"./Utils\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar querystring = require(\"querystring\");\n/**\n * Provides access to the `ShortCode` endpoint.\n */\n\n\nclass ShortCode {\n  static get PATH() {\n    return \"/sc/us/${type}/json\";\n  }\n\n  static get ERROR_MESSAGES() {\n    return {\n      to: \"Invalid to address\",\n      msgParams: \"Invalid shortcode message parameters\"\n    };\n  }\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Additional ShortCode options.\n   */\n\n\n  constructor(credentials) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  _sendRequest(endpoint, method, callback) {\n    endpoint.path = endpoint.path + (endpoint.path.indexOf(\"?\") > 0 ? \"&\" : \"?\") + querystring.stringify({\n      api_key: this.creds.apiKey,\n      api_secret: this.creds.apiSecret\n    });\n    this.options.httpClient.request(endpoint, method, callback);\n  }\n\n  _sendViaShortcode(type, recipient, messageParams, opts, callback) {\n    if (!recipient) {\n      _Utils.default.sendError(callback, new Error(ShortCode.ERROR_MESSAGES.to));\n    }\n\n    if (!messageParams || !Object.keys(messageParams)) {\n      _Utils.default.sendError(callback, new Error(ShortCode.ERROR_MESSAGES.msgParams));\n    }\n\n    opts = opts || {};\n    var path = ShortCode.PATH.replace(\"${type}\", type);\n    Object.keys(messageParams).forEach(function (key) {\n      opts[key] = messageParams[key];\n    });\n    opts.to = recipient;\n    path += \"?\" + querystring.stringify(opts);\n    this.options.logger.info(\"sending message from shortcode \" + type + \" to \" + recipient + \" with parameters \" + JSON.stringify(messageParams));\n\n    this._sendRequest({\n      host: this.options.restHost || \"rest.nexmo.com\",\n      path: path\n    }, \"POST\", function (err, apiResponse) {\n      if (!err && apiResponse.status && apiResponse.messages[0].status > 0) {\n        _Utils.default.sendError(callback, new Error(apiResponse.messages[0][\"error-text\"]), apiResponse);\n      } else {\n        if (callback) callback(err, apiResponse);\n      }\n    });\n  }\n\n  shortcodeAlert(recipient, messageParams, opts, callback) {\n    this._sendViaShortcode(\"alert\", recipient, messageParams, opts, callback);\n  }\n\n  shortcode2FA(recipient, messageParams, opts, callback) {\n    this._sendViaShortcode(\"2fa\", recipient, messageParams, opts, callback);\n  }\n\n  shortcodeMarketing(recipient, messageParams, opts, callback) {\n    this._sendViaShortcode(\"marketing\", recipient, messageParams, opts, callback);\n  }\n\n}\n\nvar _default = ShortCode;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["../src/ShortCode.js"],"names":["querystring","require","PATH","ERROR_MESSAGES","to","msgParams","constructor","options","_sendRequest","endpoint","api_key","api_secret","apiSecret","_sendViaShortcode","Utils","ShortCode","Object","opts","path","messageParams","JSON","host","apiResponse","callback","shortcodeAlert","shortcode2FA","shortcodeMarketing"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport Utils from \"./Utils\";\n\nvar querystring = require(\"querystring\");\n\n/**\n * Provides access to the `ShortCode` endpoint.\n */\nclass ShortCode {\n  static get PATH() {\n    return \"/sc/us/${type}/json\";\n  }\n\n  static get ERROR_MESSAGES() {\n    return {\n      to: \"Invalid to address\",\n      msgParams: \"Invalid shortcode message parameters\",\n    };\n  }\n\n  /**\n   * @param {Credentials} credentials\n   *    credentials to be used when interacting with the API.\n   * @param {Object} options\n   *    Additional ShortCode options.\n   */\n  constructor(credentials, options = {}) {\n    this.creds = credentials;\n    this.options = options;\n  }\n\n  _sendRequest(endpoint, method, callback) {\n    endpoint.path =\n      endpoint.path +\n      (endpoint.path.indexOf(\"?\") > 0 ? \"&\" : \"?\") +\n      querystring.stringify({\n        api_key: this.creds.apiKey,\n        api_secret: this.creds.apiSecret,\n      });\n    this.options.httpClient.request(endpoint, method, callback);\n  }\n\n  _sendViaShortcode(type, recipient, messageParams, opts, callback) {\n    if (!recipient) {\n      Utils.sendError(callback, new Error(ShortCode.ERROR_MESSAGES.to));\n    }\n    if (!messageParams || !Object.keys(messageParams)) {\n      Utils.sendError(callback, new Error(ShortCode.ERROR_MESSAGES.msgParams));\n    }\n    opts = opts || {};\n    var path = ShortCode.PATH.replace(\"${type}\", type);\n    Object.keys(messageParams).forEach(function (key) {\n      opts[key] = messageParams[key];\n    });\n    opts.to = recipient;\n    path += \"?\" + querystring.stringify(opts);\n    this.options.logger.info(\n      \"sending message from shortcode \" +\n        type +\n        \" to \" +\n        recipient +\n        \" with parameters \" +\n        JSON.stringify(messageParams)\n    );\n    this._sendRequest(\n      {\n        host: this.options.restHost || \"rest.nexmo.com\",\n        path: path,\n      },\n      \"POST\",\n      function (err, apiResponse) {\n        if (!err && apiResponse.status && apiResponse.messages[0].status > 0) {\n          Utils.sendError(\n            callback,\n            new Error(apiResponse.messages[0][\"error-text\"]),\n            apiResponse\n          );\n        } else {\n          if (callback) callback(err, apiResponse);\n        }\n      }\n    );\n  }\n\n  shortcodeAlert(recipient, messageParams, opts, callback) {\n    this._sendViaShortcode(\"alert\", recipient, messageParams, opts, callback);\n  }\n  shortcode2FA(recipient, messageParams, opts, callback) {\n    this._sendViaShortcode(\"2fa\", recipient, messageParams, opts, callback);\n  }\n  shortcodeMarketing(recipient, messageParams, opts, callback) {\n    this._sendViaShortcode(\n      \"marketing\",\n      recipient,\n      messageParams,\n      opts,\n      callback\n    );\n  }\n}\n\nexport default ShortCode;\n"]},"metadata":{},"sourceType":"script"}